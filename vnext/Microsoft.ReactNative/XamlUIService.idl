<<<<<<< HEAD
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

import "IReactContext.idl";

namespace Microsoft.ReactNative {

  [default_interface]
  [webhosthidden]
  runtimeclass XamlUIService {
    static XamlUIService FromContext(IReactContext context);

    Windows.UI.Xaml.DependencyObject ElementFromReactTag(Int64 reactTag);

    // Dispatch UI event. This method is to be moved to IReactViewContext.
    void DispatchEvent(Windows.UI.Xaml.FrameworkElement view, String eventName, JSValueArgWriter eventDataArgWriter);
  }

} // namespace Microsoft.ReactNative
||||||| 811c767bf
=======
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import "IReactContext.idl";

#include "NamespaceRedirect.h"
#include "DocString.h"

namespace Microsoft.ReactNative {

  [default_interface]
  [webhosthidden]
  DOC_STRING("Provides access to XAML UI-specific functionality. It provides access to APIs to get a XAML element from a react tag, and to dispatch events to JS components.")
  runtimeclass XamlUIService {
    DOC_STRING("Use this method to gain access to the `XamlUIService` from a `ReactContext`.")
    static XamlUIService FromContext(IReactContext context);

    DOC_STRING("Get the backing XAML element from a react tag.")
    XAML_NAMESPACE.DependencyObject ElementFromReactTag(Int64 reactTag);

    DOC_STRING("Dispatch an event to a JS component.")
    // Dispatch UI event. This method is to be moved to IReactViewContext.
    void DispatchEvent(XAML_NAMESPACE.FrameworkElement view, String eventName, JSValueArgWriter eventDataArgWriter);

    // This needs to be manually provided to the ReactInstanceSettings when using XamlIslands
    static void SetXamlRoot(IReactPropertyBag properties, XAML_NAMESPACE.XamlRoot xamlRoot);
    static XAML_NAMESPACE.XamlRoot GetXamlRoot(IReactPropertyBag properties);
  }

} // namespace Microsoft.ReactNative
>>>>>>> 64b0f8706de05473456eae6340a4cbcd938baaaa
