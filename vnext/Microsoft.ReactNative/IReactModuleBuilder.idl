// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import "IJSValueReader.idl";
import "IJSValueWriter.idl";
import "IReactContext.idl";

#include "DocString.h"

namespace Microsoft.ReactNative {

  // A delegate that will set reactContext for a module.
  // We use it for a stand-alone initialize method, strongly typed JS events and functions.
  DOC_STRING("A delegate that will set `reactContext` for a module. We use it for a stand-alone initialize method, strongly typed JS events and functions.")
  delegate void InitializerDelegate(IReactContext reactContext);

  // Native method return type.
  enum MethodReturnType {
    Void,
    Callback,
    TwoCallbacks,
    Promise,
  };

  // A callback to call JS code with results.
  DOC_STRING("A callback to call JS code with results.")
  delegate void MethodResultCallback(IJSValueWriter outputWriter);

  // A delegate to call native asynchronous method.
  DOC_STRING("A delegate to call native asynchronous method.")
  delegate void MethodDelegate(
      IJSValueReader inputReader,
      IJSValueWriter outputWriter,
      MethodResultCallback resolve,
      MethodResultCallback reject);

  // A delegate to call native synchronous method.
  DOC_STRING("A delegate to call native synchronous method.")
  delegate void SyncMethodDelegate(IJSValueReader inputReader, IJSValueWriter outputWriter);

  // A delegate to gather constants from native modules.
  DOC_STRING("A delegate to gather constants from native modules.")
  delegate void ConstantProviderDelegate(IJSValueWriter constantWriter);

  // Builds native modules inside of React Native code based on the provided meta-data.
  [webhosthidden]
  DOC_STRING("Builds native modules inside of React native code based on the provided meta-data. \
See [Native Modules](native-modules) for more usage information.")
  interface IReactModuleBuilder {

    DOC_STRING("An initializer is a method that will be called when the react instance starts.  It provides the native module with the @IReactContext for the running instance. See @InitializerDelegate.")
    void AddInitializer(InitializerDelegate initializer);

    DOC_STRING("The JavaScript values written by the @ConstantProviderDelegate will be available as constants on the native module is JavaScript.")
    void AddConstantProvider(ConstantProviderDelegate constantProvider);
    void AddMethod(String name, MethodReturnType returnType, MethodDelegate method);

    DOC_STRING("Adds a synchronous method to the native module.  See @SyncMethodDelegate.")
    void AddSyncMethod(String name, SyncMethodDelegate method);
  };
} // namespace Microsoft.ReactNative
