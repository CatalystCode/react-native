// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

import "IJSValueReader.idl";
import "IJSValueWriter.idl";

namespace Microsoft.ReactNative {

  enum MethodReturnType {
    Void,
    Callback,
    TwoCallbacks,
    Promise,
  };

  delegate void MethodResultCallback(IJSValueWriter outputWriter);
  delegate void MethodDelegate(
      IJSValueReader inputReader,
      IJSValueWriter outputWriter,
      MethodResultCallback resolve,
      MethodResultCallback reject);
  delegate void SyncMethodDelegate(IJSValueReader inputReader, IJSValueWriter outputWriter);
  delegate void ConstantProvider(IJSValueWriter constantWriter);

  delegate void ReactArgWriter(IJSValueWriter writer);
  delegate void ReactEventHandler(ReactArgWriter argWriter);
  delegate void ReactEventHandlerSetter(ReactEventHandler eventHandler);

  [webhosthidden]
  interface IReactModuleBuilder {
    [noexcept2] void SetEventEmitterName(String name);
    [noexcept2] void AddMethod(String name, MethodReturnType returnType, MethodDelegate method);
    [noexcept2] void AddSyncMethod(String name, SyncMethodDelegate method);
    [noexcept2] void AddConstantProvider(ConstantProvider constantProvider);
    [noexcept2] void AddEventHandlerSetter(String name, ReactEventHandlerSetter eventHandlerSetter);
  };
} // namespace Microsoft.ReactNative
