// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

namespace Microsoft.ReactNative {

  // The delegate is used to create property value on-demand.
  [webhosthidden]
  delegate Object ReactCreatePropertyValue();

  // Namespace for the property name.
  // Use ReactPropertyNameTable.GetNamespace to get atomic property namespace for a string.
  [webhosthidden]
  interface IReactPropertyNamespace {
    // Get String name representation of the property namespace.
    String NamespaceName { get; };
  }

  // Name of a property.
  // Use ReactPropertyNameTable.GetName to get atomic property name for a string.
  [webhosthidden]
  interface IReactPropertyName {
    // The local property name String in context of the property namespace.
    String LocalName { get; };

    // The namespace the property name is defined in.
    IReactPropertyNamespace Namespace { get; };
  }

  // The IPropertyBag provides a thread-safe property storage.
  // Properties are identified by a propertyName.
  // have their own set of properties not visible to other components.
  // It is expected that there will be no direct use of this interface.
  // All usage should happen through a strongly typed accessors.
  [webhosthidden]
  runtimeclass ReactPropertyBag {
    // Construct new PropertyNameTable.
    ReactPropertyBag();

    // Return a global namespace that an empty name.
    static IReactPropertyNamespace GlobalNamespace { get; };

    // Get an atomic IReactPropertyNamespace for a provided namespaceName.
    // The valid namespace name must be at least one character long.
    // Otherwise, the function crashes.
    // Consider to use module name as a namespace for module-specific properties.
    static IReactPropertyNamespace GetNamespace(String namespaceName);

    // Get atomic IReactPropertyName for the provided property name and property namespace.
    // If ns is null, then it uses IReactPropertyNamespace.GlobalNamespace.
    // The valid property name must be at least one character long.
    // Otherwise, the function crashes.
    static IReactPropertyName GetName(IReactPropertyNamespace ns, String localName);

    // Get property value for the propertyName. It returns null if the property does not exist.
    Object GetProperty(IReactPropertyName propertyName);

    // Get property value for the propertyName.
    // If the property does not exist, then create it by calling createValue delegate.
    // The function may return null if the createValue returns null when called.
    Object GetOrCreateProperty(IReactPropertyName propertyName, ReactCreatePropertyValue createValue);

    // Set property value for the propertyName.
    // It returns previously stored property value.
    // It returns null if property did not exist. 
    // If provided value is null, then the property is removed.
    Object SetProperty(IReactPropertyName propertyName, Object value);

    // Remove property with the propertyName.
    // It returns previously stored property value.
    // It returns null if property did not exist.
    Object RemoveProperty(IReactPropertyName propertyName);
  }
} // namespace Microsoft.ReactNative
