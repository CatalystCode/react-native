name: 0.0.$(Date:yyMM.d)$(Rev:rrr)

variables:
  VmImage: windows-2019

trigger:
  batch: true
  branches:
    include:
      - master
      - 0.58-vnext-stable
      - fabric

pr: none

jobs:
  - job: RnwNpmPublish
    displayName: React-Native-Windows Npm Build Rev Publish
    pool:
      vmImage: $(VmImage)
    timeoutInMinutes: 120
    cancelTimeoutInMinutes: 5
    steps:
      - checkout: self
        clean: true
        submodules: false
        persistCredentials: true

      - template: templates/configure-git.yml

      - task: CmdLine@2
        displayName: yarn install
        inputs:
          script: yarn install --frozen-lockfile

      - task: CmdLine@2
        displayName: yarn build
        inputs:
          script: yarn build

      - task: CmdLine@2
        displayName: Beachball Publish (for master)
        inputs:
          script: node ./node_modules/beachball/bin/beachball.js publish --tag vnext -n $(npmAuthToken) --yes -m "applying package updates ***NO_CI***"
        condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))

      - task: CmdLine@2
        displayName: Beachball Publish (for other branches)
        inputs:
          script: node ./node_modules/beachball/bin/beachball.js publish --tag $(Build.SourceBranchName) -n $(npmAuthToken) -yes -m "applying package updates ***NO_CI***"
        condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'master'))

      - task: CmdLine@2
        displayName: Set Version Env Vars
        name: setVersionEnvVars
        inputs:
          script: node ./.ado/setVersionEnvVars.js
        env:
          RUNNER_TEMP: $(Build.ArtifactStagingDirectory)

      - task: PublishBuildArtifacts@1
        displayName: Publish VersionEnvVars
        inputs:
          PathtoPublish: $(Build.ArtifactStagingDirectory)/versionEnvVars
          ArtifactName: VersionEnvVars

  - job: RnwNativeBuildDesktop
    displayName: Build Desktop
    dependsOn: RnwNpmPublish
    strategy:
      matrix:
        X64Debug:
          BuildConfiguration: Debug
          BuildPlatform: x64
        X86Debug:
          BuildConfiguration: Debug
          BuildPlatform: x86
        X64Release:
          BuildConfiguration: Release
          BuildPlatform: x64
        X86Release:
          BuildConfiguration: Release
          BuildPlatform: x86
    pool:
      vmImage: $(VmImage)

    variables:
      VsComponents: Microsoft.VisualStudio.Component.VC.v141.x86.x64
      VCTargetsPath: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v150'

    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download VersionEnvVars
        inputs:
          artifactName: VersionEnvVars
          downloadPath: $(Build.ArtifactStagingDirectory)

      - task: CmdLine@2
        inputs:
          script: node $(Build.ArtifactStagingDirectory)/versionEnvVars/versionEnvVars.js

      - template: templates/build-rnw.yml
        parameters:
          project: vnext/ReactWindows-Desktop.sln
          platformToolset: v141
          vsComponents: $(VsComponents)
          msbuildArguments:
            /p:RNW_PKG_VERSION_STR="$(RNW_PKG_VERSION_STR)"
            /p:RNW_PKG_VERSION="$(RNW_PKG_VERSION)"
            /p:VCTargetsPath="$(VCTargetsPath)"

      - template: templates/publish-build-artifacts-for-nuget.yml
        parameters:
          artifactName: ReactWindows
          contents: |
            React.Windows.Desktop.DLL\**
            React.Windows.Desktop.Test.DLL\**

  - job: RnwNativeBuildUniversal
    displayName: Build Universal
    dependsOn: RnwNpmPublish
    strategy:
      matrix:
        X64Debug:
          BuildConfiguration: Debug
          BuildPlatform: x64
          LayoutHeaders: true
        X86Debug:
          BuildConfiguration: Debug
          BuildPlatform: x86
        ArmDebug:
          BuildConfiguration: Debug
          BuildPlatform: arm
        X64Release:
          BuildConfiguration: Release
          BuildPlatform: x64
        X86Release:
          BuildConfiguration: Release
          BuildPlatform: x86
        ArmRelease:
          BuildConfiguration: Release
          BuildPlatform: arm
    pool:
      vmImage: $(VmImage)

    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download VersionEnvVars
        inputs:
          artifactName: VersionEnvVars
          downloadPath: $(Build.ArtifactStagingDirectory)

      - task: CmdLine@2
        inputs:
          script: node $(Build.ArtifactStagingDirectory)/versionEnvVars/versionEnvVars.js

      - template: templates/build-rnw.yml
        parameters:
          project: vnext/ReactWindows-Universal.sln

      - template: templates/publish-build-artifacts-for-nuget.yml
        parameters:
          artifactName: ReactWindows
          layoutHeaders: eq('true', variables['LayoutHeaders'])
          contents: |
            ReactUWP\**
            React.Windows.Desktop.DLL\**
            React.Windows.Desktop.Test.DLL\**

    # Disable for now, not sure this works on github projects anyway.
    # - task: PublishSymbols@2
    #   displayName: 'Publish symbols path'
    #   inputs:
    #     SearchPattern: 'vnext/target/**/*.pdb'
    #     SymbolServerType: TeamServices
  - job: RNWNuget
    dependsOn:
      - RnwNpmPublish
      - RnwNativeBuild
    displayName: React-Native-Windows Build and Publish Nuget
    pool:
      vmImage: $(VmImage)

    steps:
      - checkout: none

      - task: DownloadBuildArtifacts@0
        displayName: Download VersionEnvVars
        inputs:
          artifactName: VersionEnvVars
          downloadPath: $(Build.ArtifactStagingDirectory)

      - task: CmdLine@2
        inputs:
          script: node $(Build.ArtifactStagingDirectory)/VersionEnvVars/versionEnvVars.js

      # The commit tag in the nuspec requires that we use at least nuget 4.6
      - task: NuGetToolInstaller@0
        inputs:
          versionSpec: ">=4.6.0"

      - template: templates/prep-and-pack-nuget.yml
        parameters:
          publishCommitId: $(publishCommitId)
          npmVersion: $(npmVersion)

      - task: PublishBuildArtifacts@1
        displayName: "Publish final nuget artifacts"
        inputs:
          PathtoPublish: $(System.DefaultWorkingDirectory)\NugetRootFinal
          ArtifactName: "ReactWindows-final-nuget"
