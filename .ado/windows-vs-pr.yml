# This file defines the Windows Visual Studio PR build steps used during the CI loop
name: $(Date:yyyyMMdd).$(Rev:.r)

trigger: none # will disable CI builds entirely

pr:
  - master

variables:
  - template: variables/msbuild.yml
  - template: variables/vs2019.yml # when using vs2019.yml, please remove workaround in e2e-test-job which is forced to use windows-2019 image.

jobs:
  - job: RNWUniversalOtherProjectsPR
    displayName: Universal Other Projects PR
    strategy:
      matrix:
        X86Debug:
          BuildConfiguration: Debug
          BuildPlatform: x86
          UseRNFork: true
        X64Release:
          BuildConfiguration: Release
          BuildPlatform: x64
          UseRNFork: true
    pool:
      vmImage: $(VmImage)
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 5

    steps:

      - task: PowerShell@2
        displayName: Display disksize
        inputs:
          targetType: inline # filePath | inline
          script: |
            Get-WmiObject Win32_LogicalDisk
        condition: succeededOrFailed()

      - checkout: self
        clean: false
        submodules: false
      
      - task: PowerShell@2
        displayName: Display disksize
        inputs:
          targetType: inline # filePath | inline
          script: |
            Get-WmiObject Win32_LogicalDisk
        condition: succeededOrFailed()

      - template: templates/prepare-env.yml
        parameters:
          useRnFork: $(UseRNFork)
          vsComponents: $(VsComponents),Microsoft.VisualStudio.Component.VC.v141.ARM
          yarnBuildCmd: buildci

      - task: NuGetCommand@2
        displayName: NuGet restore - Playground
        inputs:
          command: restore
          restoreSolution: packages/playground/windows/Playground.sln
          verbosityRestore: Detailed # Options: quiet, normal, detailed

      - task: PowerShell@2
        displayName: Display disksize
        inputs:
          targetType: inline # filePath | inline
          script: |
            Get-WmiObject Win32_LogicalDisk
        condition: succeededOrFailed()

      - task: MSBuild@1
        displayName: MSBuild - Playground
        inputs:
          solution: packages/playground/windows/Playground.sln
          msbuildVersion: $(MSBuildVersion) # Optional. Options: latest, 16.0, 15.0, 14.0, 12.0, 4.0
          msbuildArchitecture: $(MSBuildArchitecture) # Optional. Options: x86, x64
          platform: $(BuildPlatform) # Optional
          configuration: $(BuildConfiguration) # Optional
          msbuildArguments:
            /p:PreferredToolArchitecture=$(MSBuildPreferredToolArchitecture)
            /p:PlatformToolset=$(MSBuildPlatformToolset)
          clean: true # Optional
        condition: and(succeeded(), eq(variables['UseRNFork'], 'true'))

      - task: PowerShell@2
        displayName: Display disksize
        inputs:
          targetType: inline # filePath | inline
          script: |
            Get-WmiObject Win32_LogicalDisk
        condition: succeededOrFailed()

      - task: CmdLine@2
        displayName: Create Playground bundle
        inputs:
          script: node node_modules/react-native/local-cli/cli.js bundle --entry-file Samples\index.tsx --bundle-output Playground.bundle
          workingDirectory: packages\playground

      - task: NuGetCommand@2
        displayName: NuGet restore - SampleApps
        inputs:
          command: restore
          restoreSolution: packages/microsoft-reactnative-sampleapps/windows/SampleApps.sln
          verbosityRestore: Detailed # Options: quiet, normal, detailed
        condition: and(succeeded(), eq(variables['UseRNFork'], 'true'))

      - task: PowerShell@2
        displayName: Display disksize
        inputs:
          targetType: inline # filePath | inline
          script: |
            Get-WmiObject Win32_LogicalDisk
        condition: succeededOrFailed()
        
      - task: MSBuild@1
        displayName: MSBuild - SampleApps
        inputs:
          solution: packages/microsoft-reactnative-sampleapps/windows/SampleApps.sln
          msbuildVersion: $(MSBuildVersion) # Optional. Options: latest, 16.0, 15.0, 14.0, 12.0, 4.0
          msbuildArchitecture: $(MSBuildArchitecture) # Optional. Options: x86, x64
          platform: $(BuildPlatform) # Optional
          configuration: $(BuildConfiguration) # Optional
          msbuildArguments:
            /p:PreferredToolArchitecture=$(MSBuildPreferredToolArchitecture)
            /p:PlatformToolset=$(MSBuildPlatformToolset)
          clean: true # Optional
        condition: and(succeeded(), eq(variables['UseRNFork'], 'true'), ne(variables['BuildPlatform'], 'x86'), true) # Disabled. issue #3670  Unable to resolve module `warnOnce`

      # Possible related to https://social.msdn.microsoft.com/Forums/vstudio/en-US/23c8df57-9c50-476c-9f56-1fe058e75a9d/uwp-app-builds-on-local-machine-fails-on-build-agent-systemprivatecorelib-not-found
      # use X86 msbuild to avoid ##[error]...Microsoft.AppXPackage.Targets(1248,5): Error MSB3816: Loading assembly "\runtime.win7-x86.microsoft.netcore.runtime.coreclr\1.0.2\runtimes\win7-x86\lib\netstandard1.0\mscorlib.dll" failed. 
      # System.ArgumentException: A BadImageFormatException has been thrown while parsing the signature.
      # This is likely due to lack of a generic context. Ensure genericTypeArguments and genericMethodArguments are provided and contain enough context.
      - task: MSBuild@1
        displayName: MSBuild - SampleApps
        inputs:
          solution: packages/microsoft-reactnative-sampleapps/windows/SampleApps.sln
          msbuildVersion: $(MSBuildVersion) # Optional. Options: latest, 16.0, 15.0, 14.0, 12.0, 4.0
          msbuildArchitecture: x86 # Optional. Options: x86, x64
          platform: $(BuildPlatform) # Optional
          configuration: $(BuildConfiguration) # Optional
          msbuildArguments:
            /p:PreferredToolArchitecture=$(MSBuildPreferredToolArchitecture)
            /p:PlatformToolset=$(MSBuildPlatformToolset)
          clean: true # Optional
        condition: and(succeeded(), eq(variables['UseRNFork'], 'true'), eq(variables['BuildPlatform'], 'x86'), true) # Disabled. [error]vnext\Microsoft.ReactNative.SharedManaged\JSValue.cs(100,36): Error CS8107: Feature 'readonly references' is not available in C# 7.0. Please use language version 7.2 or greater.

      - task: CmdLine@2
        displayName: Create SampleApp bundle
        inputs:
          script: node node_modules/react-native/local-cli/cli.js bundle --entry-file index.windows.js --bundle-output SampleApp.bundle
          workingDirectory: packages\microsoft-reactnative-sampleapps
        condition: and(succeeded(), eq(variables['UseRNFork'], 'true'))

      - task: CmdLine@2
        displayName: Create RNTester bundle
        inputs:
          script: node ../node_modules/react-native/local-cli/cli.js bundle --entry-file .\RNTester.js --bundle-output RNTester.windows.bundle --platform windows
          workingDirectory: vnext
        condition: and(succeeded(), eq(variables['UseRNFork'], 'true'))

      - task: PowerShell@2
        displayName: Display disksize
        inputs:
          targetType: inline # filePath | inline
          script: |
            Get-WmiObject Win32_LogicalDisk
        condition: succeededOrFailed()

  