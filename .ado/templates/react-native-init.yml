#
parameters:
  - name: language
    type: string
  - name: platform
    type: string
  - name: configuration
    type: string
  - name: projectType
    type: string
  - name: additionalRunArguments
    type: string
    default: ''
  - name: useNuGet
    type: boolean
    default: false
  - name: vsComponents
    type: string
    default: ''
  - name: listVsComponents
    type: boolean
    default: false
  - name: installVsComponents
    type: boolean
    default: false
  - name: additionalInitArguments
    type: string
    default: ''
  - name: continueOnBuildFailure
    type: string # Used in a matrix which doesn't support booleans
    default: ''

steps:
  - checkout: self # self represents the repo where the initial Pipelines YAML file was found
    clean: true # whether to fetch clean each time
    # fetchDepth: 2 # the depth of commits to ask Git to fetch
    lfs: false # whether to download Git-LFS files
    submodules: false # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
    persistCredentials: false # set to 'true' to leave the OAuth token in the Git config after the initial fetch

# Work around issue of parameters not getting expanded in conditions properly	
  - powershell: |	
      Write-Host "##vso[task.setvariable variable=localConfig]${{ parameters.configuration}}"	
      Write-Host "##vso[task.setvariable variable=MSBUILDDEBUGPATH]$(Build.StagingDirectory)\CrashDumps"

  - task: CmdLine@2
    displayName: Build project (Release)
    inputs:
      script: npx --no-install react-native run-windows --arch ${{ parameters.platform }} --no-launch --logging --buildLogDirectory $(Build.BinariesDirectory)\${{ parameters.platform }}\${{ parameters.configuration }}\BuildLogs --release ${{ parameters.additionalRunArguments }}
      workingDirectory: $(Agent.BuildDirectory)
    continueOnError: ${{ eq('true', parameters.continueOnBuildFailure)) }}
    condition: and(succeeded(), eq('Release', variables['localConfig']))

  - task: CmdLine@2
    displayName: Build project (Debug)
    inputs:
      script: npx --no-install react-native run-windows --arch ${{ parameters.platform }} --no-launch --logging --buildLogDirectory $(Build.BinariesDirectory)\${{ parameters.platform }}\${{ parameters.configuration }}\BuildLogs ${{ parameters.additionalRunArguments }}
      workingDirectory: $(Agent.BuildDirectory)\testcli
    continueOnError: ${{ eq('true', parameters.continueOnBuildFailure)) }}
    condition: and(succeeded(), eq('Debug', variables['localConfig']))
