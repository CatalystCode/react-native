parameters:
  publishCommitId: '0'
  npmVersion: '0.0.1-pr'
  # Note: NuGet pack expects platform-specific file separators ('\' on Windows).
  nugetroot: $(System.DefaultWorkingDirectory)\ReactWindows
  desktopId: 'OfficeReact.Win32'
  microsoftRNId: 'Microsoft.ReactNative'
  slices: ''
  packDesktop: true
  packMicrosoftReactNative: true
  packMicrosoftReactNativeCxx: true
  packMicrosoftReactNativeManaged: true
  packMicrosoftReactNativeManagedCodeGen: true
  signMicrosoft: false

steps:
  - task: DownloadPipelineArtifact@2
    displayName: 'Download ReactWindows Artifact'
    inputs:
      artifact: ReactWindows
      path: $(System.DefaultWorkingDirectory)/ReactWindows

  - ${{ if or(parameters.packMicrosoftReactNative, parameters.packMicrosoftReactNativeCxx, parameters.packMicrosoftReactNativeManaged, parameters.packMicrosoftReactNativeManagedCodeGen) }}:
    - powershell: |
        (Get-Content -Path $(System.DefaultWorkingDirectory)\ReactWindows\Microsoft.ReactNative.VersionCheck.targets) -replace '\$\$nuGetPackageVersion\$\$', '${{parameters.npmVersion}}' | Set-Content -Path  $(System.DefaultWorkingDirectory)\ReactWindows\Microsoft.ReactNative.VersionCheck.targets
      displayName: Patch version check file with version ${{parameters.npmVersion}}

  - ${{ if parameters.packDesktop }}:
    - template: prep-and-pack-single.yml
      parameters:
        packageId: ${{parameters.desktopId}}
        packageVersion: ${{parameters.npmVersion}}
        slices: ${{ coalesce(parameters.slices, '("x64.Debug", "x86.Debug", "ARM64.Debug", "x64.Release","x86.Release", "ARM64.Release")') }}
        buildProperties: 'CommitId=${{parameters.publishCommitId}};nugetroot=${{parameters.nugetroot}}'

  - ${{ if parameters.packMicrosoftReactNative }}:
    - template: prep-and-pack-single.yml
      parameters:
        packageId: Microsoft.ReactNative
        packageVersion: ${{parameters.npmVersion}}
        slices: ${{ coalesce(parameters.slices, '("x64.Release","x86.Release", "ARM.Release", "ARM64.Release")') }}
        buildProperties: CommitId=${{parameters.publishCommitId}};nugetroot=${{parameters.nugetroot}};baseconfiguration=Release;baseplatform=x64
        codesignBinaries: ${{ parameters.signMicrosoft }}
        codesignNuget: ${{ parameters.signMicrosoft }}

  - ${{ if parameters.packMicrosoftReactNativeCxx }}:
    - template: prep-and-pack-single.yml
      parameters:
        packageId: Microsoft.ReactNative.Cxx
        packageVersion: ${{parameters.npmVersion}}
        slices:  ''
        buildProperties: CommitId=${{parameters.publishCommitId}};nugetroot=${{parameters.nugetroot}};baseconfiguration=Release;baseplatform=x64
        codesignNuget: ${{ parameters.signMicrosoft }}

  - ${{ if parameters.packMicrosoftReactNativeManaged }}:
    - template: prep-and-pack-single.yml
      parameters:
        packageId: Microsoft.ReactNative.Managed
        packageVersion: ${{parameters.npmVersion}}
        slices: ${{ coalesce(parameters.slices, '("x64.Release","x86.Release", "ARM.Release", "ARM64.Release")') }}
        buildProperties: CommitId=${{parameters.publishCommitId}};nugetroot=${{parameters.nugetroot}};baseconfiguration=Release;baseplatform=x64
        codesignBinaries: ${{ parameters.signMicrosoft }}
        codesignNuget: ${{ parameters.signMicrosoft }}

  - ${{ if parameters.packMicrosoftReactNativeManagedCodeGen }}:
    - template: prep-and-pack-single.yml
      parameters:
        packageId: Microsoft.ReactNative.Managed.CodeGen
        packageVersion: ${{parameters.npmVersion}}
        slices: ''
        buildProperties: CommitId=${{parameters.publishCommitId}};nugetroot=${{parameters.nugetroot}};baseconfiguration=Release;baseplatform=x64
        codesignBinaries: ${{ parameters.signMicrosoft }}
        codesignNuget: ${{ parameters.signMicrosoft }}
