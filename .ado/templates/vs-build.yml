parameters:
  BuildConfiguration:
  BuildPlatform:
  VsInstallerUri:
  VsFeatures:
  MSBuildVersion:
  MSBuildArchitecture:
  MSBuild.solution:
  MSBuildnugetConfigPath: ''
  MSBuildmsbuildArguments: ''

steps:

  - template: stop-packagers.yml

  - task: PowerShell@2
    displayName: Install Visual C++ Toolset 14.16
    inputs:
      targetType: filePath
      filePath: $(Build.SourcesDirectory)/vnext/Scripts/Tfs/Install-VSFeatures.ps1
      arguments: -InstallerUri ${{ parameters.VsInstallerUri }} -Features ${{ parameters.VsFeatures }}

  # - task: PublishBuildArtifacts@1
  #   displayName: "Publish Artifact: vslogs"
  #   inputs:
  #     PathtoPublish: $(System.DefaultWorkingDirectory)\vslogs
  #     ArtifactName: "vslogs"

  - task: NuGetCommand@2
    displayName: NuGet restore - ReactWindows
    inputs:
      command: restore
      # restoreSolution: vnext/ReactWindows-Desktop.sln
      restoreSolution: "${{ parameters.MSBuild.solution }}"
      feedsToUse: config
      #vstsFeed: # Required when feedsToUse == Select
      #includeNuGetOrg: true # Required when feedsToUse == Select
      nugetConfigPath: ${{ parameters.MSBuildnugetConfigPath }}
      #externalFeedCredentials: # Optional
      #noCache: false
      #disableParallelProcessing: false
      restoreDirectory: packages/
      verbosityRestore: Detailed # Options: quiet, normal, detailed
      #packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg' # Required when command == Push
      #nuGetFeedType: 'internal' # Required when command == Push# Options: internal, external
      #publishVstsFeed: # Required when command == Push && NuGetFeedType == Internal
      #publishPackageMetadata: true # Optional
      #allowPackageConflicts: # Optional
      #publishFeedCredentials: # Required when command == Push && NuGetFeedType == External
      #verbosityPush: 'Detailed' # Options: quiet, normal, detailed
      #packagesToPack: '**/*.csproj' # Required when command == Pack
      #configuration: '$(BuildConfiguration)' # Optional
      #packDestination: '$(Build.ArtifactStagingDirectory)' # Optional
      #versioningScheme: 'off' # Options: off, byPrereleaseNumber, byEnvVar, byBuildNumber
      #includeReferencedProjects: false # Optional
      #versionEnvVar: # Required when versioningScheme == ByEnvVar
      #majorVersion: '1' # Required when versioningScheme == ByPrereleaseNumber
      #minorVersion: '0' # Required when versioningScheme == ByPrereleaseNumber
      #patchVersion: '0' # Required when versioningScheme == ByPrereleaseNumber
      #packTimezone: 'utc' # Required when versioningScheme == ByPrereleaseNumber# Options: utc, local
      #includeSymbols: false # Optional
      #toolPackage: # Optional
      #buildProperties: # Optional
      #basePath: # Optional
      #verbosityPack: 'Detailed' # Options: quiet, normal, detailed
      #arguments: # Required when command == Custom

  - task: MSBuild@1
    displayName: MSBuild - ReactWindows
    inputs:
      solution: ${{ parameters.MSBuild.solution }}
      #msbuildLocationMethod: 'version' # Optional. Options: version, location
      msbuildVersion: ${{ parameters.MSBuildVersion }} # Optional. Options: latest, 16.0, 15.0, 14.0, 12.0, 4.0
      msbuildArchitecture: ${{ parameters.MSBuildArchitecture }} # Optional. Options: x86, x64
      #msbuildLocation: # Optional
      platform: ${{ parameters.BuildPlatform }} # Optional
      configuration:  ${{ parameters.BuildConfiguration }}  # Optional
      msbuildArguments: /p:PreferredToolArchitecture=x64 ${{ parameters.MSBuildmsbuildArguments }}
      clean: true # Optional
      #maximumCpuCount: false # Optional
      #restoreNugetPackages: false # Optional
      #logProjectEvents: false # Optional
      #createLogFile: false # Optional
      #logFileVerbosity: 'normal' # Optional. Options: quiet, minimal, normal, detailed, diagnostic
