// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

import "inspectable.idl";
import "Windows.Foundation.idl";
import "Windows.UI.Xaml.Controls.idl";

#define VERSION 1.0

namespace react{
  namespace uwp {

  runtimeclass ReactControl;
  runtimeclass ReactInstance;

  [version(VERSION), uuid(264B6078-B38B-4C86-A796-8D2B1BC5CBCA)]
  delegate HRESULT MethodDelegate([in]HSTRING args);

  [version(VERSION), uuid(9E1F6C38-0270-4F22-9B90-7DA312DB60B9)]
  delegate HRESULT MethodCallback(Windows.Foundation.Collections.IVectorView<HSTRING>* pCallBack);

  [version(VERSION), uuid(C9ED1358-8239-4E71-BBF1-776200E841B2)]
  delegate HRESULT MethodWithCallbackDelegate([in]HSTRING args, [in]MethodCallback* callBack);

  declare
  {
    interface Windows.Foundation.Collections.IMapView<HSTRING, MethodDelegate*>;
    interface Windows.Foundation.Collections.IMapView<HSTRING, MethodWithCallbackDelegate*>;
  }

  [version(VERSION), uuid(765C0317-7210-4E72-873B-CF0384B2B606)]
  interface IModule : IInspectable
  {
    [propget] HRESULT Name([out][retval] HSTRING* value);

    [propget] HRESULT Constants([out][retval] Windows.Foundation.Collections.IMapView<HSTRING, HSTRING>** value);

    [propget] HRESULT Methods([out][retval] Windows.Foundation.Collections.IMapView<HSTRING, MethodDelegate*>** value);

    [propget] HRESULT MethodsWithCallback([out][retval] Windows.Foundation.Collections.IMapView<HSTRING, MethodWithCallbackDelegate*>** value);
  }

  [version(VERSION)]
  struct InstanceSettings
  {
      boolean	UseWebDebugger;
      boolean	UseLiveReload;
  };

  [version(VERSION)]
  [uuid(4A7C4023-0A50-4599-97A6-095528319E71)]
  interface IInstance : IInspectable
  {
    HRESULT Start([in] InstanceSettings settings);

    // We should really use a pull model like RN does -- but providing the push for now for ease of migration
    HRESULT RegisterModule([in]IModule* pModule);
  }

  [exclusiveto(Instance)]
  [version(VERSION)]
  [uuid(A0B3AE3E-3E34-436D-BE4F-603A2C7098DE)]
  interface IInstanceStatics : IInspectable
  {
    HRESULT Create([in] HSTRING bundleFileName, [out, retval] react.uwp.Instance** instance);
  }

  [version(VERSION)]
  [marshaling_behavior(agile)]
  [threading(both)]
  [static(IInstanceStatics, VERSION)]
  runtimeclass Instance
  {
    [default] interface IInstance;
  };

  [version(VERSION), uuid(BA8CD9D5-78E7-451E-9FA6-FAEAE6B43C52)]
  interface IReactControl : IInspectable
  {
    [propget] HRESULT JsComponentName([out][retval] HSTRING* value);
    [propput] HRESULT JsComponentName([in] HSTRING value);
    [propget] HRESULT InitialProps([out][retval] HSTRING* value);
    [propput] HRESULT InitialProps([in] HSTRING value);

    [propget] HRESULT Instance([out][retval] IInstance** value);
    [propput] HRESULT Instance([in] IInstance* value);

    HRESULT StartRender();
    HRESULT StopRender();
  }

  [exclusiveto(ReactControl)]
  [version(VERSION), uuid(B882C924-0A23-4B4A-9088-8FAECB2D5945)]
  interface IReactControlFactory : IInspectable
  {
    HRESULT CreateInstance([in] IInspectable* outer,[out] IInspectable** inner,[out][retval]react.uwp.ReactControl** instance);
  }

  [composable(react.uwp.IReactControlFactory, public, VERSION)]
  [version(VERSION), marshaling_behavior(agile), threading(both)]
  runtimeclass ReactControl : Windows.UI.Xaml.Controls.Grid
  {
    [default] interface IReactControl;
  };

  }
}
