name: CI

on: [push]

jobs:
  UWPPR:
    name: UWP PR

    runs-on: windows-2016
    
    #strategy:
    #  matrix:
    #    include:
    #    - BuildConfiguration: Debug
    #      BuildPlatform: x64
    #      UseRNFork: true
    #    - BuildConfiguration: Debug
    #      BuildPlatform: x86
    #      UseRNFork: true
    #    - BuildConfiguration: Debug
    #      BuildPlatform: arm
    #      UseRNFork: true
    #    - BuildConfiguration: Release
    #      BuildPlatform: x64
    #      UseRNFork: true
    #    - BuildConfiguration: Release
    #      BuildPlatform: x86
    #      UseRNFork: true
    #    - BuildConfiguration: Release
    #      BuildPlatform: arm
    #      UseRNFork: true
    #    - BuildConfiguration: Debug
    #      BuildPlatform: x86
    #      UseRNFork: false
    
    steps:
    - uses: actions/checkout@v1

    #- name: Switch to fork
    #  if: ${{ matrix.UseRNFork }} == 'false'
    #  run: node scripts/useUnForkedRN.js
    #  working-directory: vnext
      
    - name: yarn install (Using microsoft/react-native)
    #  if: ${{ matrix.UseRNFork }} == 'true'
      run: yarn install --frozen-lockfile
      
      # We can't use a frozen lockfile for both the fork and non-fork, since they install different dependencies
      # We don't want to force devs to update/create two lock files on every change, so just don't freeze when
      # using the non fork version.
    #- name: yarn install (Using facebook/react-native)
    #  if: ${{ matrix.UseRNFork }} == 'false'
    #  run: yarn install
      
    - run: yarn buildci
     
    - name: Install SDK
      run: .\vnext\Scripts\Install-WindowsSdkISO.ps1 18362
      shell: powershell
      
    - name: Setup Nuget.exe
      uses: warrenbuckley/Setup-Nuget@v1
      
    - name: Setup MSBuild.exe
      uses: warrenbuckley/Setup-MSBuild@v1
        
    - name: NuGet restore
      run: nuget.exe restore vnext\ReactWindows-UWP.sln -PackagesDirectory packages/ -Verbosity Detailed -NonInteractive
      
    - name: Build ReactWindows-UWP.sln
      run: msbuild vnext\ReactWindows-UWP.sln /nologo /nr:false /t:"Clean" /p:PreferredToolArchitecture=x64 /p:platform="%BUILDPLATFORM%" /p:configuration="%BUILDCONFIGURATION%"
      env:
        BUILDPLATFORM: x64
        BUILDCONFIGURATION: Debug
    #    BUILDPLATFORM: ${{ matrix.BuildPlatform }}
    #    BUILDCONFIGURATION: ${{ matrix.BuildConfiguration }}

    - name: NuGet restore
      run: nuget.exe restore packages/playground/windows/Playground.sln -PackagesDirectory packages/ -Verbosity Detailed -NonInteractive
      
    - name: Build ReactWindows-UWP.sln
      run: msbuild packages/playground/windows/Playground.sln /nologo /nr:false /t:"Clean" /p:PreferredToolArchitecture=x64 /p:platform="%BUILDPLATFORM%" /p:configuration="%BUILDCONFIGURATION%"
      env:
        BUILDPLATFORM: x64
        BUILDCONFIGURATION: Debug
        
    # todo work out how to specify working-directory for run command
    - name: Create Playground bundle
      run: cd packages\playground && node node_modules/react-native/local-cli/cli.js bundle --entry-file Samples\index.tsx --bundle-output Playground.bundle
        
    - name: Create RNTester bundle
    #  if: ${{ matrix.UseRNFork }} == 'true'
      run: cd vnext && node ../node_modules/react-native/local-cli/cli.js bundle --entry-file .\RNTester.js --bundle-output RNTester.windows.bundle --platform windows
        
