{"version":3,"file":"ButtonWin32.Props.js","sourceRoot":"","sources":["../../../../src/Libraries/Components/Button/ButtonWin32.Props.ts"],"names":[],"mappings":"","sourcesContent":["import RN = require('react-native');\n\n// removes from interface T the members of interface K\ntype Omit<T, K> = Pick<T, Exclude<keyof T, keyof K>>;\n\nexport type ButtonWin32OmitStyles = RN.TextStyleIOS & RN.TextStyleAndroid;\n\nexport interface IButtonWin32Style extends Omit<RN.TextStyle, ButtonWin32OmitStyles> {}\n\nexport interface IButtonWin32Props extends RN.ButtonProps {\n  /**\n   * Style information which controls the visual appearence of the button.\n   */\n  style?: RN.StyleProp<IButtonWin32Style>;\n\n  /**\n   * Blur event. Called when focus is lost.\n   */\n  onBlur?: () => void;\n\n  /**\n   * Focus event. Called when focus is acquired.\n   */\n  onFocus?: () => void;\n\n  /**\n   * Mouse-enter event. Called when mouse is moved on to the control.\n   */\n  onMouseEnter?: () => void;\n\n  /**\n   * Mouse-leave event. Called when mouse is moved off of the control.\n   */\n  onMouseLeave?: () => void;\n\n  /**\n   * Touch-start event. Called when the user begins touching the control.\n   */\n  onTouchStart?: (event: RN.GestureResponderEvent) => void;\n\n  /**\n   * Touch-end event. Called when the user stops touching the control.\n   */\n  onTouchEnd?: (event: RN.GestureResponderEvent) => void;\n}\n"]}